(import std.String)
(import std.Testing)

(test:suite string {
    (test:eq "abcdefghijklmnopqrstuvwxyz" (str:toLower "ABCDEFGHIJKLMNOPQRSTUVWXYZ"))
    (test:eq "abcdefghijklmnopqrstuvwxyz" (str:toLower "abcdefghijklmnopqrstuvwxyz"))
    (test:eq "ABCDEFGHIJKLMNOPQRSTUVWXYZ" (str:toUpper "abcdefghijklmnopqrstuvwxyz"))
    (test:eq "ABCDEFGHIJKLMNOPQRSTUVWXYZ" (str:toUpper "ABCDEFGHIJKLMNOPQRSTUVWXYZ"))

    (test:eq "hello world" (str:reverse "dlrow olleh"))
    (test:eq "" (str:reverse ""))
    (test:eq "a" (str:reverse "a"))

    (test:eq "hello" (str:slice "hello world" 0 5))
    (test:eq "hello world" (str:slice "hello world" 0 100))
    (test:eq "h" (str:slice "hello world" 0 1))
    (test:eq "ello" (str:slice "hello world" 1 4))

    (test:eq ["a" "bc" "def"] (str:split "a,bc,def" ","))
    (test:eq ["a" "bc" "def"] (str:split "a-;-bc-;-def" "-;-"))
    (test:eq ["abcdef"] (str:split "abcdef" ";;;;"))
    (test:eq ["a"] (str:split "a" ","))
    (test:eq [] (str:split "" ","))

    #(test:eq "hello world" (str:replace "hello world" "coucou" "not"))
    #(test:eq "not world" (str:replace "hello world" "hello" "not"))
    (test:eq "not not " (str:replace "hello hello " "hello" "not"))
    (test:eq "hello worldworldABC" (str:replace "hello worldABC" "ABC" "worldABC"))

    (test:eq "hello;3.14;true;world" (str:join ["hello" 3.14 true "world"] ";"))
    (test:eq "hello" (str:join ["hello"] ";"))
    (test:eq "" (str:join [] ";;"))})