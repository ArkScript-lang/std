(import std.Range:*)
(import std.Math :even)
(import std.Testing)

(test:suite range {
    (let r (range 0 10))
    (mut i 0)
    (while (< i 10) {
        (test:eq i (r))
        (set i (+ 1 i))})
    (test:eq r.i 10)
    (test:eq (r) nil)

    (r.reset)
    (test:eq r.i 0)
    (test:eq (r.asList) [0 1 2 3 4 5 6 7 8 9])
    (range:forEach r (fun (e)
        (test:neq e nil)))

    (let filtered (range:filter r math:even))
    (test:eq filtered [0 2 4 6 8])

    (let mapped (range:map r (fun (e) (* e e))))
    (test:eq mapped [0 1 4 9 16 25 36 49 64 81])

    (let reduced (range:reduce r (fun (a b) (+ a b))))
    (test:eq reduced 45)})
