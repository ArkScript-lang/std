(import std.Macros)
(import std.Testing)

(let f1 (fun (data)
    (+ data "-f1")))
(let f2 (fun (data)
    (+ data "-f2")))
(let f3 (fun (data)
    (+ data "-f3")))

(let test_func (fun (a b c) (* a b c)))
(let test_func1 (partial test_func 1))
(let test_func2 (partial test_func1 2))
(let test_func3 (partial2 test_fun 1 _ 3))

(test:suite macros {
    (test:eq (-> "f0" f1) "f0-f1")
    (test:eq (-> "f0" f1 f2 f3) "f0-f1-f2-f3")

    (test:eq (test_func1 2 3) 6)
    (test:eq ($argcount test_func1) 2)
    (test:eq ($argcount test_func2) 1)
    (test:eq (test_func3 2) 6) })
