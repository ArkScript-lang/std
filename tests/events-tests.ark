(import std.Events)
(import std.Testing)

(let em (events:manager:make))

(test:suite events {
    # _check_valid tests
    (test:expect (em._check_valid (fun () ())))
    (test:expect (not (em._check_valid 4)))

    # on tests
    (em.on "myType" 4)
    (test:eq [] em._listeners)
    (em.on "myType" (fun (_) ()))
    (test:neq [] em._listeners)

    # emit tests
    (test:expect (not (em.emit "emitType")))
    (em.on "emitType" (fun (_) ()))
    (test:expect (em.emit "emitType"))

    # emitWith tests
    (test:expect (not (em.emitWith 1 "emitWithType")))
    (em.on "emitWithType" (fun (_) ()))
    (test:expect (em.emitWith 2 "emitWithType"))

    # removeListenersOfType
    (test:expect (not (em.removeListenersOfType "removeType")))
    (em.on "removeType" (fun (_) ()))
    (test:expect (em.removeListenersOfType "removeType"))})
