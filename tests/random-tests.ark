(import std.Random)
(import std.List :forEach :find)
(import std.Testing)

(test:suite random {
    (test:case "choice" {
        (test:eq nil (random:choice []))
        (test:eq nil (random:choice ""))
        (test:eq 1 (random:choice [1]))
        (test:eq "1" (random:choice "1"))

        # have to repeat the test to be sure that we hit every index
        (test:eq 1 (random:choice [1 1 1]))
        (test:eq 1 (random:choice [1 1 1]))
        (test:eq 1 (random:choice [1 1 1]))
        (test:eq 1 (random:choice [1 1 1]))
        (test:eq 1 (random:choice [1 1 1]))
        (test:eq "1" (random:choice "111"))
        (test:eq "1" (random:choice "111"))
        (test:eq "1" (random:choice "111"))
        (test:eq "1" (random:choice "111"))
        (test:eq "1" (random:choice "111"))

        (test:eq [] (random:shuffle []))
        (test:eq [1] (random:shuffle [1]))

        (let data [0 1 2 3 4 5 6 7 8 9])
        (let randomized (random:shuffle data))
        (test:eq (len data) (len randomized))

        (forEach
            randomized
            (fun (e)
                (test:expect (!= (list:find data e) -1))))
        })})

