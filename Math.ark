###
# @meta Mathematics
# @brief Return the absolute value of a number
# @param _x the number to get the absolute value of
# @author https://github.com/rstefanic
###
(let math:abs (fun (_x)
    (if (< _x 0) (* -1 _x) _x)))

###
# @meta Mathematics
# @brief Return true if the number is even, false otherwise
# @param _n the number
# @author https://github.com/rstefanic
###
(let math:even (fun (_n)
    (= 0 (mod _n 2))))

###
# @meta Mathematics
# @brief Return true if the number is odd, false otherwise
# @param _n the number
# @author https://github.com/rstefanic
###
(let math:odd (fun (_n)
    (= 1 (math:abs (mod _n 2)))))

###
# @meta Mathematics
# @brief Get the minimum between two numbers
# @param _a the first number
# @param _b the second number
# @author https://github.com/rstefanic
###
(let math:min (fun (_a _b)
    (if (< _a _b) _a _b)))

###
# @meta Mathematics
# @brief Get the maximum between two numbers
# @param _a the first number
# @param _b the second number
# @author https://github.com/rstefanic
###
(let math:max (fun (_a _b)
    (if (> _a _b) _a _b)))

###
# @meta Mathematics
# @brief Get a number to a given power
# @details Note that it's defined as exp(a * ln(x)), thus won't work for negative numbers
# @param _x the number to pow
# @param _a the exponent
# @author https://github.com/SuperFola
###
(let math:pow (fun (_x _a) (math:exp (* _a (math:ln _x)))))

###
# @meta Mathematics
# @brief Get the square root of a number
# @details Square roots can't be taken for negative numbers for obvious reasons.
# @param _x the number
# @author https://github.com/SuperFola
###
(let math:sqrt (fun (_x) (math:exp (* 0.5 (math:ln _x)))))